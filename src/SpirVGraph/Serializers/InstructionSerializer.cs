using System;
using System.Collections.Generic;
using System.Text;
using SpirVGraph.Instructions;
using SpirVGraph.Spv;
using Toe.Scripting;

namespace SpirVGraph.Serializers
{
    public abstract class InstructionSerializer
    {
        private static readonly InstructionSerializer[] _serializers;
        private static readonly Dictionary<string, Op> _opCodes;

        static InstructionSerializer()
        {
            #region Serializers
            _serializers = new InstructionSerializer[5634];
            _serializers[(int)Op.OpNop] = new OpNopSerializer();
            _serializers[(int)Op.OpUndef] = new OpUndefSerializer();
            _serializers[(int)Op.OpSourceContinued] = new OpSourceContinuedSerializer();
            _serializers[(int)Op.OpSource] = new OpSourceSerializer();
            _serializers[(int)Op.OpSourceExtension] = new OpSourceExtensionSerializer();
            _serializers[(int)Op.OpName] = new OpNameSerializer();
            _serializers[(int)Op.OpMemberName] = new OpMemberNameSerializer();
            _serializers[(int)Op.OpString] = new OpStringSerializer();
            _serializers[(int)Op.OpLine] = new OpLineSerializer();
            _serializers[(int)Op.OpExtension] = new OpExtensionSerializer();
            _serializers[(int)Op.OpExtInstImport] = new OpExtInstImportSerializer();
            _serializers[(int)Op.OpExtInst] = new OpExtInstSerializer();
            _serializers[(int)Op.OpMemoryModel] = new OpMemoryModelSerializer();
            _serializers[(int)Op.OpEntryPoint] = new OpEntryPointSerializer();
            _serializers[(int)Op.OpExecutionMode] = new OpExecutionModeSerializer();
            _serializers[(int)Op.OpCapability] = new OpCapabilitySerializer();
            _serializers[(int)Op.OpTypeVoid] = new OpTypeVoidSerializer();
            _serializers[(int)Op.OpTypeBool] = new OpTypeBoolSerializer();
            _serializers[(int)Op.OpTypeInt] = new OpTypeIntSerializer();
            _serializers[(int)Op.OpTypeFloat] = new OpTypeFloatSerializer();
            _serializers[(int)Op.OpTypeVector] = new OpTypeVectorSerializer();
            _serializers[(int)Op.OpTypeMatrix] = new OpTypeMatrixSerializer();
            _serializers[(int)Op.OpTypeImage] = new OpTypeImageSerializer();
            _serializers[(int)Op.OpTypeSampler] = new OpTypeSamplerSerializer();
            _serializers[(int)Op.OpTypeSampledImage] = new OpTypeSampledImageSerializer();
            _serializers[(int)Op.OpTypeArray] = new OpTypeArraySerializer();
            _serializers[(int)Op.OpTypeRuntimeArray] = new OpTypeRuntimeArraySerializer();
            _serializers[(int)Op.OpTypeStruct] = new OpTypeStructSerializer();
            _serializers[(int)Op.OpTypeOpaque] = new OpTypeOpaqueSerializer();
            _serializers[(int)Op.OpTypePointer] = new OpTypePointerSerializer();
            _serializers[(int)Op.OpTypeFunction] = new OpTypeFunctionSerializer();
            _serializers[(int)Op.OpTypeEvent] = new OpTypeEventSerializer();
            _serializers[(int)Op.OpTypeDeviceEvent] = new OpTypeDeviceEventSerializer();
            _serializers[(int)Op.OpTypeReserveId] = new OpTypeReserveIdSerializer();
            _serializers[(int)Op.OpTypeQueue] = new OpTypeQueueSerializer();
            _serializers[(int)Op.OpTypePipe] = new OpTypePipeSerializer();
            _serializers[(int)Op.OpTypeForwardPointer] = new OpTypeForwardPointerSerializer();
            _serializers[(int)Op.OpConstantTrue] = new OpConstantTrueSerializer();
            _serializers[(int)Op.OpConstantFalse] = new OpConstantFalseSerializer();
            _serializers[(int)Op.OpConstant] = new OpConstantSerializer();
            _serializers[(int)Op.OpConstantComposite] = new OpConstantCompositeSerializer();
            _serializers[(int)Op.OpConstantSampler] = new OpConstantSamplerSerializer();
            _serializers[(int)Op.OpConstantNull] = new OpConstantNullSerializer();
            _serializers[(int)Op.OpSpecConstantTrue] = new OpSpecConstantTrueSerializer();
            _serializers[(int)Op.OpSpecConstantFalse] = new OpSpecConstantFalseSerializer();
            _serializers[(int)Op.OpSpecConstant] = new OpSpecConstantSerializer();
            _serializers[(int)Op.OpSpecConstantComposite] = new OpSpecConstantCompositeSerializer();
            _serializers[(int)Op.OpSpecConstantOp] = new OpSpecConstantOpSerializer();
            _serializers[(int)Op.OpFunction] = new OpFunctionSerializer();
            _serializers[(int)Op.OpFunctionParameter] = new OpFunctionParameterSerializer();
            _serializers[(int)Op.OpFunctionEnd] = new OpFunctionEndSerializer();
            _serializers[(int)Op.OpFunctionCall] = new OpFunctionCallSerializer();
            _serializers[(int)Op.OpVariable] = new OpVariableSerializer();
            _serializers[(int)Op.OpImageTexelPointer] = new OpImageTexelPointerSerializer();
            _serializers[(int)Op.OpLoad] = new OpLoadSerializer();
            _serializers[(int)Op.OpStore] = new OpStoreSerializer();
            _serializers[(int)Op.OpCopyMemory] = new OpCopyMemorySerializer();
            _serializers[(int)Op.OpCopyMemorySized] = new OpCopyMemorySizedSerializer();
            _serializers[(int)Op.OpAccessChain] = new OpAccessChainSerializer();
            _serializers[(int)Op.OpInBoundsAccessChain] = new OpInBoundsAccessChainSerializer();
            _serializers[(int)Op.OpPtrAccessChain] = new OpPtrAccessChainSerializer();
            _serializers[(int)Op.OpArrayLength] = new OpArrayLengthSerializer();
            _serializers[(int)Op.OpGenericPtrMemSemantics] = new OpGenericPtrMemSemanticsSerializer();
            _serializers[(int)Op.OpInBoundsPtrAccessChain] = new OpInBoundsPtrAccessChainSerializer();
            _serializers[(int)Op.OpDecorate] = new OpDecorateSerializer();
            _serializers[(int)Op.OpMemberDecorate] = new OpMemberDecorateSerializer();
            _serializers[(int)Op.OpDecorationGroup] = new OpDecorationGroupSerializer();
            _serializers[(int)Op.OpGroupDecorate] = new OpGroupDecorateSerializer();
            _serializers[(int)Op.OpGroupMemberDecorate] = new OpGroupMemberDecorateSerializer();
            _serializers[(int)Op.OpVectorExtractDynamic] = new OpVectorExtractDynamicSerializer();
            _serializers[(int)Op.OpVectorInsertDynamic] = new OpVectorInsertDynamicSerializer();
            _serializers[(int)Op.OpVectorShuffle] = new OpVectorShuffleSerializer();
            _serializers[(int)Op.OpCompositeConstruct] = new OpCompositeConstructSerializer();
            _serializers[(int)Op.OpCompositeExtract] = new OpCompositeExtractSerializer();
            _serializers[(int)Op.OpCompositeInsert] = new OpCompositeInsertSerializer();
            _serializers[(int)Op.OpCopyObject] = new OpCopyObjectSerializer();
            _serializers[(int)Op.OpTranspose] = new OpTransposeSerializer();
            _serializers[(int)Op.OpSampledImage] = new OpSampledImageSerializer();
            _serializers[(int)Op.OpImageSampleImplicitLod] = new OpImageSampleImplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleExplicitLod] = new OpImageSampleExplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleDrefImplicitLod] = new OpImageSampleDrefImplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleDrefExplicitLod] = new OpImageSampleDrefExplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleProjImplicitLod] = new OpImageSampleProjImplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleProjExplicitLod] = new OpImageSampleProjExplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleProjDrefImplicitLod] = new OpImageSampleProjDrefImplicitLodSerializer();
            _serializers[(int)Op.OpImageSampleProjDrefExplicitLod] = new OpImageSampleProjDrefExplicitLodSerializer();
            _serializers[(int)Op.OpImageFetch] = new OpImageFetchSerializer();
            _serializers[(int)Op.OpImageGather] = new OpImageGatherSerializer();
            _serializers[(int)Op.OpImageDrefGather] = new OpImageDrefGatherSerializer();
            _serializers[(int)Op.OpImageRead] = new OpImageReadSerializer();
            _serializers[(int)Op.OpImageWrite] = new OpImageWriteSerializer();
            _serializers[(int)Op.OpImage] = new OpImageSerializer();
            _serializers[(int)Op.OpImageQueryFormat] = new OpImageQueryFormatSerializer();
            _serializers[(int)Op.OpImageQueryOrder] = new OpImageQueryOrderSerializer();
            _serializers[(int)Op.OpImageQuerySizeLod] = new OpImageQuerySizeLodSerializer();
            _serializers[(int)Op.OpImageQuerySize] = new OpImageQuerySizeSerializer();
            _serializers[(int)Op.OpImageQueryLod] = new OpImageQueryLodSerializer();
            _serializers[(int)Op.OpImageQueryLevels] = new OpImageQueryLevelsSerializer();
            _serializers[(int)Op.OpImageQuerySamples] = new OpImageQuerySamplesSerializer();
            _serializers[(int)Op.OpConvertFToU] = new OpConvertFToUSerializer();
            _serializers[(int)Op.OpConvertFToS] = new OpConvertFToSSerializer();
            _serializers[(int)Op.OpConvertSToF] = new OpConvertSToFSerializer();
            _serializers[(int)Op.OpConvertUToF] = new OpConvertUToFSerializer();
            _serializers[(int)Op.OpUConvert] = new OpUConvertSerializer();
            _serializers[(int)Op.OpSConvert] = new OpSConvertSerializer();
            _serializers[(int)Op.OpFConvert] = new OpFConvertSerializer();
            _serializers[(int)Op.OpQuantizeToF16] = new OpQuantizeToF16Serializer();
            _serializers[(int)Op.OpConvertPtrToU] = new OpConvertPtrToUSerializer();
            _serializers[(int)Op.OpSatConvertSToU] = new OpSatConvertSToUSerializer();
            _serializers[(int)Op.OpSatConvertUToS] = new OpSatConvertUToSSerializer();
            _serializers[(int)Op.OpConvertUToPtr] = new OpConvertUToPtrSerializer();
            _serializers[(int)Op.OpPtrCastToGeneric] = new OpPtrCastToGenericSerializer();
            _serializers[(int)Op.OpGenericCastToPtr] = new OpGenericCastToPtrSerializer();
            _serializers[(int)Op.OpGenericCastToPtrExplicit] = new OpGenericCastToPtrExplicitSerializer();
            _serializers[(int)Op.OpBitcast] = new OpBitcastSerializer();
            _serializers[(int)Op.OpSNegate] = new OpSNegateSerializer();
            _serializers[(int)Op.OpFNegate] = new OpFNegateSerializer();
            _serializers[(int)Op.OpIAdd] = new OpIAddSerializer();
            _serializers[(int)Op.OpFAdd] = new OpFAddSerializer();
            _serializers[(int)Op.OpISub] = new OpISubSerializer();
            _serializers[(int)Op.OpFSub] = new OpFSubSerializer();
            _serializers[(int)Op.OpIMul] = new OpIMulSerializer();
            _serializers[(int)Op.OpFMul] = new OpFMulSerializer();
            _serializers[(int)Op.OpUDiv] = new OpUDivSerializer();
            _serializers[(int)Op.OpSDiv] = new OpSDivSerializer();
            _serializers[(int)Op.OpFDiv] = new OpFDivSerializer();
            _serializers[(int)Op.OpUMod] = new OpUModSerializer();
            _serializers[(int)Op.OpSRem] = new OpSRemSerializer();
            _serializers[(int)Op.OpSMod] = new OpSModSerializer();
            _serializers[(int)Op.OpFRem] = new OpFRemSerializer();
            _serializers[(int)Op.OpFMod] = new OpFModSerializer();
            _serializers[(int)Op.OpVectorTimesScalar] = new OpVectorTimesScalarSerializer();
            _serializers[(int)Op.OpMatrixTimesScalar] = new OpMatrixTimesScalarSerializer();
            _serializers[(int)Op.OpVectorTimesMatrix] = new OpVectorTimesMatrixSerializer();
            _serializers[(int)Op.OpMatrixTimesVector] = new OpMatrixTimesVectorSerializer();
            _serializers[(int)Op.OpMatrixTimesMatrix] = new OpMatrixTimesMatrixSerializer();
            _serializers[(int)Op.OpOuterProduct] = new OpOuterProductSerializer();
            _serializers[(int)Op.OpDot] = new OpDotSerializer();
            _serializers[(int)Op.OpIAddCarry] = new OpIAddCarrySerializer();
            _serializers[(int)Op.OpISubBorrow] = new OpISubBorrowSerializer();
            _serializers[(int)Op.OpUMulExtended] = new OpUMulExtendedSerializer();
            _serializers[(int)Op.OpSMulExtended] = new OpSMulExtendedSerializer();
            _serializers[(int)Op.OpAny] = new OpAnySerializer();
            _serializers[(int)Op.OpAll] = new OpAllSerializer();
            _serializers[(int)Op.OpIsNan] = new OpIsNanSerializer();
            _serializers[(int)Op.OpIsInf] = new OpIsInfSerializer();
            _serializers[(int)Op.OpIsFinite] = new OpIsFiniteSerializer();
            _serializers[(int)Op.OpIsNormal] = new OpIsNormalSerializer();
            _serializers[(int)Op.OpSignBitSet] = new OpSignBitSetSerializer();
            _serializers[(int)Op.OpLessOrGreater] = new OpLessOrGreaterSerializer();
            _serializers[(int)Op.OpOrdered] = new OpOrderedSerializer();
            _serializers[(int)Op.OpUnordered] = new OpUnorderedSerializer();
            _serializers[(int)Op.OpLogicalEqual] = new OpLogicalEqualSerializer();
            _serializers[(int)Op.OpLogicalNotEqual] = new OpLogicalNotEqualSerializer();
            _serializers[(int)Op.OpLogicalOr] = new OpLogicalOrSerializer();
            _serializers[(int)Op.OpLogicalAnd] = new OpLogicalAndSerializer();
            _serializers[(int)Op.OpLogicalNot] = new OpLogicalNotSerializer();
            _serializers[(int)Op.OpSelect] = new OpSelectSerializer();
            _serializers[(int)Op.OpIEqual] = new OpIEqualSerializer();
            _serializers[(int)Op.OpINotEqual] = new OpINotEqualSerializer();
            _serializers[(int)Op.OpUGreaterThan] = new OpUGreaterThanSerializer();
            _serializers[(int)Op.OpSGreaterThan] = new OpSGreaterThanSerializer();
            _serializers[(int)Op.OpUGreaterThanEqual] = new OpUGreaterThanEqualSerializer();
            _serializers[(int)Op.OpSGreaterThanEqual] = new OpSGreaterThanEqualSerializer();
            _serializers[(int)Op.OpULessThan] = new OpULessThanSerializer();
            _serializers[(int)Op.OpSLessThan] = new OpSLessThanSerializer();
            _serializers[(int)Op.OpULessThanEqual] = new OpULessThanEqualSerializer();
            _serializers[(int)Op.OpSLessThanEqual] = new OpSLessThanEqualSerializer();
            _serializers[(int)Op.OpFOrdEqual] = new OpFOrdEqualSerializer();
            _serializers[(int)Op.OpFUnordEqual] = new OpFUnordEqualSerializer();
            _serializers[(int)Op.OpFOrdNotEqual] = new OpFOrdNotEqualSerializer();
            _serializers[(int)Op.OpFUnordNotEqual] = new OpFUnordNotEqualSerializer();
            _serializers[(int)Op.OpFOrdLessThan] = new OpFOrdLessThanSerializer();
            _serializers[(int)Op.OpFUnordLessThan] = new OpFUnordLessThanSerializer();
            _serializers[(int)Op.OpFOrdGreaterThan] = new OpFOrdGreaterThanSerializer();
            _serializers[(int)Op.OpFUnordGreaterThan] = new OpFUnordGreaterThanSerializer();
            _serializers[(int)Op.OpFOrdLessThanEqual] = new OpFOrdLessThanEqualSerializer();
            _serializers[(int)Op.OpFUnordLessThanEqual] = new OpFUnordLessThanEqualSerializer();
            _serializers[(int)Op.OpFOrdGreaterThanEqual] = new OpFOrdGreaterThanEqualSerializer();
            _serializers[(int)Op.OpFUnordGreaterThanEqual] = new OpFUnordGreaterThanEqualSerializer();
            _serializers[(int)Op.OpShiftRightLogical] = new OpShiftRightLogicalSerializer();
            _serializers[(int)Op.OpShiftRightArithmetic] = new OpShiftRightArithmeticSerializer();
            _serializers[(int)Op.OpShiftLeftLogical] = new OpShiftLeftLogicalSerializer();
            _serializers[(int)Op.OpBitwiseOr] = new OpBitwiseOrSerializer();
            _serializers[(int)Op.OpBitwiseXor] = new OpBitwiseXorSerializer();
            _serializers[(int)Op.OpBitwiseAnd] = new OpBitwiseAndSerializer();
            _serializers[(int)Op.OpNot] = new OpNotSerializer();
            _serializers[(int)Op.OpBitFieldInsert] = new OpBitFieldInsertSerializer();
            _serializers[(int)Op.OpBitFieldSExtract] = new OpBitFieldSExtractSerializer();
            _serializers[(int)Op.OpBitFieldUExtract] = new OpBitFieldUExtractSerializer();
            _serializers[(int)Op.OpBitReverse] = new OpBitReverseSerializer();
            _serializers[(int)Op.OpBitCount] = new OpBitCountSerializer();
            _serializers[(int)Op.OpDPdx] = new OpDPdxSerializer();
            _serializers[(int)Op.OpDPdy] = new OpDPdySerializer();
            _serializers[(int)Op.OpFwidth] = new OpFwidthSerializer();
            _serializers[(int)Op.OpDPdxFine] = new OpDPdxFineSerializer();
            _serializers[(int)Op.OpDPdyFine] = new OpDPdyFineSerializer();
            _serializers[(int)Op.OpFwidthFine] = new OpFwidthFineSerializer();
            _serializers[(int)Op.OpDPdxCoarse] = new OpDPdxCoarseSerializer();
            _serializers[(int)Op.OpDPdyCoarse] = new OpDPdyCoarseSerializer();
            _serializers[(int)Op.OpFwidthCoarse] = new OpFwidthCoarseSerializer();
            _serializers[(int)Op.OpEmitVertex] = new OpEmitVertexSerializer();
            _serializers[(int)Op.OpEndPrimitive] = new OpEndPrimitiveSerializer();
            _serializers[(int)Op.OpEmitStreamVertex] = new OpEmitStreamVertexSerializer();
            _serializers[(int)Op.OpEndStreamPrimitive] = new OpEndStreamPrimitiveSerializer();
            _serializers[(int)Op.OpControlBarrier] = new OpControlBarrierSerializer();
            _serializers[(int)Op.OpMemoryBarrier] = new OpMemoryBarrierSerializer();
            _serializers[(int)Op.OpAtomicLoad] = new OpAtomicLoadSerializer();
            _serializers[(int)Op.OpAtomicStore] = new OpAtomicStoreSerializer();
            _serializers[(int)Op.OpAtomicExchange] = new OpAtomicExchangeSerializer();
            _serializers[(int)Op.OpAtomicCompareExchange] = new OpAtomicCompareExchangeSerializer();
            _serializers[(int)Op.OpAtomicCompareExchangeWeak] = new OpAtomicCompareExchangeWeakSerializer();
            _serializers[(int)Op.OpAtomicIIncrement] = new OpAtomicIIncrementSerializer();
            _serializers[(int)Op.OpAtomicIDecrement] = new OpAtomicIDecrementSerializer();
            _serializers[(int)Op.OpAtomicIAdd] = new OpAtomicIAddSerializer();
            _serializers[(int)Op.OpAtomicISub] = new OpAtomicISubSerializer();
            _serializers[(int)Op.OpAtomicSMin] = new OpAtomicSMinSerializer();
            _serializers[(int)Op.OpAtomicUMin] = new OpAtomicUMinSerializer();
            _serializers[(int)Op.OpAtomicSMax] = new OpAtomicSMaxSerializer();
            _serializers[(int)Op.OpAtomicUMax] = new OpAtomicUMaxSerializer();
            _serializers[(int)Op.OpAtomicAnd] = new OpAtomicAndSerializer();
            _serializers[(int)Op.OpAtomicOr] = new OpAtomicOrSerializer();
            _serializers[(int)Op.OpAtomicXor] = new OpAtomicXorSerializer();
            _serializers[(int)Op.OpPhi] = new OpPhiSerializer();
            _serializers[(int)Op.OpLoopMerge] = new OpLoopMergeSerializer();
            _serializers[(int)Op.OpSelectionMerge] = new OpSelectionMergeSerializer();
            _serializers[(int)Op.OpLabel] = new OpLabelSerializer();
            _serializers[(int)Op.OpBranch] = new OpBranchSerializer();
            _serializers[(int)Op.OpBranchConditional] = new OpBranchConditionalSerializer();
            _serializers[(int)Op.OpSwitch] = new OpSwitchSerializer();
            _serializers[(int)Op.OpKill] = new OpKillSerializer();
            _serializers[(int)Op.OpReturn] = new OpReturnSerializer();
            _serializers[(int)Op.OpReturnValue] = new OpReturnValueSerializer();
            _serializers[(int)Op.OpUnreachable] = new OpUnreachableSerializer();
            _serializers[(int)Op.OpLifetimeStart] = new OpLifetimeStartSerializer();
            _serializers[(int)Op.OpLifetimeStop] = new OpLifetimeStopSerializer();
            _serializers[(int)Op.OpGroupAsyncCopy] = new OpGroupAsyncCopySerializer();
            _serializers[(int)Op.OpGroupWaitEvents] = new OpGroupWaitEventsSerializer();
            _serializers[(int)Op.OpGroupAll] = new OpGroupAllSerializer();
            _serializers[(int)Op.OpGroupAny] = new OpGroupAnySerializer();
            _serializers[(int)Op.OpGroupBroadcast] = new OpGroupBroadcastSerializer();
            _serializers[(int)Op.OpGroupIAdd] = new OpGroupIAddSerializer();
            _serializers[(int)Op.OpGroupFAdd] = new OpGroupFAddSerializer();
            _serializers[(int)Op.OpGroupFMin] = new OpGroupFMinSerializer();
            _serializers[(int)Op.OpGroupUMin] = new OpGroupUMinSerializer();
            _serializers[(int)Op.OpGroupSMin] = new OpGroupSMinSerializer();
            _serializers[(int)Op.OpGroupFMax] = new OpGroupFMaxSerializer();
            _serializers[(int)Op.OpGroupUMax] = new OpGroupUMaxSerializer();
            _serializers[(int)Op.OpGroupSMax] = new OpGroupSMaxSerializer();
            _serializers[(int)Op.OpReadPipe] = new OpReadPipeSerializer();
            _serializers[(int)Op.OpWritePipe] = new OpWritePipeSerializer();
            _serializers[(int)Op.OpReservedReadPipe] = new OpReservedReadPipeSerializer();
            _serializers[(int)Op.OpReservedWritePipe] = new OpReservedWritePipeSerializer();
            _serializers[(int)Op.OpReserveReadPipePackets] = new OpReserveReadPipePacketsSerializer();
            _serializers[(int)Op.OpReserveWritePipePackets] = new OpReserveWritePipePacketsSerializer();
            _serializers[(int)Op.OpCommitReadPipe] = new OpCommitReadPipeSerializer();
            _serializers[(int)Op.OpCommitWritePipe] = new OpCommitWritePipeSerializer();
            _serializers[(int)Op.OpIsValidReserveId] = new OpIsValidReserveIdSerializer();
            _serializers[(int)Op.OpGetNumPipePackets] = new OpGetNumPipePacketsSerializer();
            _serializers[(int)Op.OpGetMaxPipePackets] = new OpGetMaxPipePacketsSerializer();
            _serializers[(int)Op.OpGroupReserveReadPipePackets] = new OpGroupReserveReadPipePacketsSerializer();
            _serializers[(int)Op.OpGroupReserveWritePipePackets] = new OpGroupReserveWritePipePacketsSerializer();
            _serializers[(int)Op.OpGroupCommitReadPipe] = new OpGroupCommitReadPipeSerializer();
            _serializers[(int)Op.OpGroupCommitWritePipe] = new OpGroupCommitWritePipeSerializer();
            _serializers[(int)Op.OpEnqueueMarker] = new OpEnqueueMarkerSerializer();
            _serializers[(int)Op.OpEnqueueKernel] = new OpEnqueueKernelSerializer();
            _serializers[(int)Op.OpGetKernelNDrangeSubGroupCount] = new OpGetKernelNDrangeSubGroupCountSerializer();
            _serializers[(int)Op.OpGetKernelNDrangeMaxSubGroupSize] = new OpGetKernelNDrangeMaxSubGroupSizeSerializer();
            _serializers[(int)Op.OpGetKernelWorkGroupSize] = new OpGetKernelWorkGroupSizeSerializer();
            _serializers[(int)Op.OpGetKernelPreferredWorkGroupSizeMultiple] = new OpGetKernelPreferredWorkGroupSizeMultipleSerializer();
            _serializers[(int)Op.OpRetainEvent] = new OpRetainEventSerializer();
            _serializers[(int)Op.OpReleaseEvent] = new OpReleaseEventSerializer();
            _serializers[(int)Op.OpCreateUserEvent] = new OpCreateUserEventSerializer();
            _serializers[(int)Op.OpIsValidEvent] = new OpIsValidEventSerializer();
            _serializers[(int)Op.OpSetUserEventStatus] = new OpSetUserEventStatusSerializer();
            _serializers[(int)Op.OpCaptureEventProfilingInfo] = new OpCaptureEventProfilingInfoSerializer();
            _serializers[(int)Op.OpGetDefaultQueue] = new OpGetDefaultQueueSerializer();
            _serializers[(int)Op.OpBuildNDRange] = new OpBuildNDRangeSerializer();
            _serializers[(int)Op.OpImageSparseSampleImplicitLod] = new OpImageSparseSampleImplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleExplicitLod] = new OpImageSparseSampleExplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleDrefImplicitLod] = new OpImageSparseSampleDrefImplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleDrefExplicitLod] = new OpImageSparseSampleDrefExplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleProjImplicitLod] = new OpImageSparseSampleProjImplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleProjExplicitLod] = new OpImageSparseSampleProjExplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleProjDrefImplicitLod] = new OpImageSparseSampleProjDrefImplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseSampleProjDrefExplicitLod] = new OpImageSparseSampleProjDrefExplicitLodSerializer();
            _serializers[(int)Op.OpImageSparseFetch] = new OpImageSparseFetchSerializer();
            _serializers[(int)Op.OpImageSparseGather] = new OpImageSparseGatherSerializer();
            _serializers[(int)Op.OpImageSparseDrefGather] = new OpImageSparseDrefGatherSerializer();
            _serializers[(int)Op.OpImageSparseTexelsResident] = new OpImageSparseTexelsResidentSerializer();
            _serializers[(int)Op.OpNoLine] = new OpNoLineSerializer();
            _serializers[(int)Op.OpAtomicFlagTestAndSet] = new OpAtomicFlagTestAndSetSerializer();
            _serializers[(int)Op.OpAtomicFlagClear] = new OpAtomicFlagClearSerializer();
            _serializers[(int)Op.OpImageSparseRead] = new OpImageSparseReadSerializer();
            _serializers[(int)Op.OpDecorateId] = new OpDecorateIdSerializer();
            _serializers[(int)Op.OpSubgroupBallotKHR] = new OpSubgroupBallotKHRSerializer();
            _serializers[(int)Op.OpSubgroupFirstInvocationKHR] = new OpSubgroupFirstInvocationKHRSerializer();
            _serializers[(int)Op.OpSubgroupAllKHR] = new OpSubgroupAllKHRSerializer();
            _serializers[(int)Op.OpSubgroupAnyKHR] = new OpSubgroupAnyKHRSerializer();
            _serializers[(int)Op.OpSubgroupAllEqualKHR] = new OpSubgroupAllEqualKHRSerializer();
            _serializers[(int)Op.OpSubgroupReadInvocationKHR] = new OpSubgroupReadInvocationKHRSerializer();
            _serializers[(int)Op.OpGroupIAddNonUniformAMD] = new OpGroupIAddNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupFAddNonUniformAMD] = new OpGroupFAddNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupFMinNonUniformAMD] = new OpGroupFMinNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupUMinNonUniformAMD] = new OpGroupUMinNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupSMinNonUniformAMD] = new OpGroupSMinNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupFMaxNonUniformAMD] = new OpGroupFMaxNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupUMaxNonUniformAMD] = new OpGroupUMaxNonUniformAMDSerializer();
            _serializers[(int)Op.OpGroupSMaxNonUniformAMD] = new OpGroupSMaxNonUniformAMDSerializer();
            _serializers[(int)Op.OpFragmentMaskFetchAMD] = new OpFragmentMaskFetchAMDSerializer();
            _serializers[(int)Op.OpFragmentFetchAMD] = new OpFragmentFetchAMDSerializer();
            _serializers[(int)Op.OpSubgroupShuffleINTEL] = new OpSubgroupShuffleINTELSerializer();
            _serializers[(int)Op.OpSubgroupShuffleDownINTEL] = new OpSubgroupShuffleDownINTELSerializer();
            _serializers[(int)Op.OpSubgroupShuffleUpINTEL] = new OpSubgroupShuffleUpINTELSerializer();
            _serializers[(int)Op.OpSubgroupShuffleXorINTEL] = new OpSubgroupShuffleXorINTELSerializer();
            _serializers[(int)Op.OpSubgroupBlockReadINTEL] = new OpSubgroupBlockReadINTELSerializer();
            _serializers[(int)Op.OpSubgroupBlockWriteINTEL] = new OpSubgroupBlockWriteINTELSerializer();
            _serializers[(int)Op.OpSubgroupImageBlockReadINTEL] = new OpSubgroupImageBlockReadINTELSerializer();
            _serializers[(int)Op.OpSubgroupImageBlockWriteINTEL] = new OpSubgroupImageBlockWriteINTELSerializer();
            _serializers[(int)Op.OpDecorateStringGOOGLE] = new OpDecorateStringGOOGLESerializer();
            _serializers[(int)Op.OpMemberDecorateStringGOOGLE] = new OpMemberDecorateStringGOOGLESerializer();
            #endregion

            #region Serializers

            _opCodes = new Dictionary<string, Op>(6000);
            _opCodes["OpNop"] = Op.OpNop;
            _opCodes["OpUndef"] = Op.OpUndef;
            _opCodes["OpSourceContinued"] = Op.OpSourceContinued;
            _opCodes["OpSource"] = Op.OpSource;
            _opCodes["OpSourceExtension"] = Op.OpSourceExtension;
            _opCodes["OpName"] = Op.OpName;
            _opCodes["OpMemberName"] = Op.OpMemberName;
            _opCodes["OpString"] = Op.OpString;
            _opCodes["OpLine"] = Op.OpLine;
            _opCodes["OpExtension"] = Op.OpExtension;
            _opCodes["OpExtInstImport"] = Op.OpExtInstImport;
            _opCodes["OpExtInst"] = Op.OpExtInst;
            _opCodes["OpMemoryModel"] = Op.OpMemoryModel;
            _opCodes["OpEntryPoint"] = Op.OpEntryPoint;
            _opCodes["OpExecutionMode"] = Op.OpExecutionMode;
            _opCodes["OpCapability"] = Op.OpCapability;
            _opCodes["OpTypeVoid"] = Op.OpTypeVoid;
            _opCodes["OpTypeBool"] = Op.OpTypeBool;
            _opCodes["OpTypeInt"] = Op.OpTypeInt;
            _opCodes["OpTypeFloat"] = Op.OpTypeFloat;
            _opCodes["OpTypeVector"] = Op.OpTypeVector;
            _opCodes["OpTypeMatrix"] = Op.OpTypeMatrix;
            _opCodes["OpTypeImage"] = Op.OpTypeImage;
            _opCodes["OpTypeSampler"] = Op.OpTypeSampler;
            _opCodes["OpTypeSampledImage"] = Op.OpTypeSampledImage;
            _opCodes["OpTypeArray"] = Op.OpTypeArray;
            _opCodes["OpTypeRuntimeArray"] = Op.OpTypeRuntimeArray;
            _opCodes["OpTypeStruct"] = Op.OpTypeStruct;
            _opCodes["OpTypeOpaque"] = Op.OpTypeOpaque;
            _opCodes["OpTypePointer"] = Op.OpTypePointer;
            _opCodes["OpTypeFunction"] = Op.OpTypeFunction;
            _opCodes["OpTypeEvent"] = Op.OpTypeEvent;
            _opCodes["OpTypeDeviceEvent"] = Op.OpTypeDeviceEvent;
            _opCodes["OpTypeReserveId"] = Op.OpTypeReserveId;
            _opCodes["OpTypeQueue"] = Op.OpTypeQueue;
            _opCodes["OpTypePipe"] = Op.OpTypePipe;
            _opCodes["OpTypeForwardPointer"] = Op.OpTypeForwardPointer;
            _opCodes["OpConstantTrue"] = Op.OpConstantTrue;
            _opCodes["OpConstantFalse"] = Op.OpConstantFalse;
            _opCodes["OpConstant"] = Op.OpConstant;
            _opCodes["OpConstantComposite"] = Op.OpConstantComposite;
            _opCodes["OpConstantSampler"] = Op.OpConstantSampler;
            _opCodes["OpConstantNull"] = Op.OpConstantNull;
            _opCodes["OpSpecConstantTrue"] = Op.OpSpecConstantTrue;
            _opCodes["OpSpecConstantFalse"] = Op.OpSpecConstantFalse;
            _opCodes["OpSpecConstant"] = Op.OpSpecConstant;
            _opCodes["OpSpecConstantComposite"] = Op.OpSpecConstantComposite;
            _opCodes["OpSpecConstantOp"] = Op.OpSpecConstantOp;
            _opCodes["OpFunction"] = Op.OpFunction;
            _opCodes["OpFunctionParameter"] = Op.OpFunctionParameter;
            _opCodes["OpFunctionEnd"] = Op.OpFunctionEnd;
            _opCodes["OpFunctionCall"] = Op.OpFunctionCall;
            _opCodes["OpVariable"] = Op.OpVariable;
            _opCodes["OpImageTexelPointer"] = Op.OpImageTexelPointer;
            _opCodes["OpLoad"] = Op.OpLoad;
            _opCodes["OpStore"] = Op.OpStore;
            _opCodes["OpCopyMemory"] = Op.OpCopyMemory;
            _opCodes["OpCopyMemorySized"] = Op.OpCopyMemorySized;
            _opCodes["OpAccessChain"] = Op.OpAccessChain;
            _opCodes["OpInBoundsAccessChain"] = Op.OpInBoundsAccessChain;
            _opCodes["OpPtrAccessChain"] = Op.OpPtrAccessChain;
            _opCodes["OpArrayLength"] = Op.OpArrayLength;
            _opCodes["OpGenericPtrMemSemantics"] = Op.OpGenericPtrMemSemantics;
            _opCodes["OpInBoundsPtrAccessChain"] = Op.OpInBoundsPtrAccessChain;
            _opCodes["OpDecorate"] = Op.OpDecorate;
            _opCodes["OpMemberDecorate"] = Op.OpMemberDecorate;
            _opCodes["OpDecorationGroup"] = Op.OpDecorationGroup;
            _opCodes["OpGroupDecorate"] = Op.OpGroupDecorate;
            _opCodes["OpGroupMemberDecorate"] = Op.OpGroupMemberDecorate;
            _opCodes["OpVectorExtractDynamic"] = Op.OpVectorExtractDynamic;
            _opCodes["OpVectorInsertDynamic"] = Op.OpVectorInsertDynamic;
            _opCodes["OpVectorShuffle"] = Op.OpVectorShuffle;
            _opCodes["OpCompositeConstruct"] = Op.OpCompositeConstruct;
            _opCodes["OpCompositeExtract"] = Op.OpCompositeExtract;
            _opCodes["OpCompositeInsert"] = Op.OpCompositeInsert;
            _opCodes["OpCopyObject"] = Op.OpCopyObject;
            _opCodes["OpTranspose"] = Op.OpTranspose;
            _opCodes["OpSampledImage"] = Op.OpSampledImage;
            _opCodes["OpImageSampleImplicitLod"] = Op.OpImageSampleImplicitLod;
            _opCodes["OpImageSampleExplicitLod"] = Op.OpImageSampleExplicitLod;
            _opCodes["OpImageSampleDrefImplicitLod"] = Op.OpImageSampleDrefImplicitLod;
            _opCodes["OpImageSampleDrefExplicitLod"] = Op.OpImageSampleDrefExplicitLod;
            _opCodes["OpImageSampleProjImplicitLod"] = Op.OpImageSampleProjImplicitLod;
            _opCodes["OpImageSampleProjExplicitLod"] = Op.OpImageSampleProjExplicitLod;
            _opCodes["OpImageSampleProjDrefImplicitLod"] = Op.OpImageSampleProjDrefImplicitLod;
            _opCodes["OpImageSampleProjDrefExplicitLod"] = Op.OpImageSampleProjDrefExplicitLod;
            _opCodes["OpImageFetch"] = Op.OpImageFetch;
            _opCodes["OpImageGather"] = Op.OpImageGather;
            _opCodes["OpImageDrefGather"] = Op.OpImageDrefGather;
            _opCodes["OpImageRead"] = Op.OpImageRead;
            _opCodes["OpImageWrite"] = Op.OpImageWrite;
            _opCodes["OpImage"] = Op.OpImage;
            _opCodes["OpImageQueryFormat"] = Op.OpImageQueryFormat;
            _opCodes["OpImageQueryOrder"] = Op.OpImageQueryOrder;
            _opCodes["OpImageQuerySizeLod"] = Op.OpImageQuerySizeLod;
            _opCodes["OpImageQuerySize"] = Op.OpImageQuerySize;
            _opCodes["OpImageQueryLod"] = Op.OpImageQueryLod;
            _opCodes["OpImageQueryLevels"] = Op.OpImageQueryLevels;
            _opCodes["OpImageQuerySamples"] = Op.OpImageQuerySamples;
            _opCodes["OpConvertFToU"] = Op.OpConvertFToU;
            _opCodes["OpConvertFToS"] = Op.OpConvertFToS;
            _opCodes["OpConvertSToF"] = Op.OpConvertSToF;
            _opCodes["OpConvertUToF"] = Op.OpConvertUToF;
            _opCodes["OpUConvert"] = Op.OpUConvert;
            _opCodes["OpSConvert"] = Op.OpSConvert;
            _opCodes["OpFConvert"] = Op.OpFConvert;
            _opCodes["OpQuantizeToF16"] = Op.OpQuantizeToF16;
            _opCodes["OpConvertPtrToU"] = Op.OpConvertPtrToU;
            _opCodes["OpSatConvertSToU"] = Op.OpSatConvertSToU;
            _opCodes["OpSatConvertUToS"] = Op.OpSatConvertUToS;
            _opCodes["OpConvertUToPtr"] = Op.OpConvertUToPtr;
            _opCodes["OpPtrCastToGeneric"] = Op.OpPtrCastToGeneric;
            _opCodes["OpGenericCastToPtr"] = Op.OpGenericCastToPtr;
            _opCodes["OpGenericCastToPtrExplicit"] = Op.OpGenericCastToPtrExplicit;
            _opCodes["OpBitcast"] = Op.OpBitcast;
            _opCodes["OpSNegate"] = Op.OpSNegate;
            _opCodes["OpFNegate"] = Op.OpFNegate;
            _opCodes["OpIAdd"] = Op.OpIAdd;
            _opCodes["OpFAdd"] = Op.OpFAdd;
            _opCodes["OpISub"] = Op.OpISub;
            _opCodes["OpFSub"] = Op.OpFSub;
            _opCodes["OpIMul"] = Op.OpIMul;
            _opCodes["OpFMul"] = Op.OpFMul;
            _opCodes["OpUDiv"] = Op.OpUDiv;
            _opCodes["OpSDiv"] = Op.OpSDiv;
            _opCodes["OpFDiv"] = Op.OpFDiv;
            _opCodes["OpUMod"] = Op.OpUMod;
            _opCodes["OpSRem"] = Op.OpSRem;
            _opCodes["OpSMod"] = Op.OpSMod;
            _opCodes["OpFRem"] = Op.OpFRem;
            _opCodes["OpFMod"] = Op.OpFMod;
            _opCodes["OpVectorTimesScalar"] = Op.OpVectorTimesScalar;
            _opCodes["OpMatrixTimesScalar"] = Op.OpMatrixTimesScalar;
            _opCodes["OpVectorTimesMatrix"] = Op.OpVectorTimesMatrix;
            _opCodes["OpMatrixTimesVector"] = Op.OpMatrixTimesVector;
            _opCodes["OpMatrixTimesMatrix"] = Op.OpMatrixTimesMatrix;
            _opCodes["OpOuterProduct"] = Op.OpOuterProduct;
            _opCodes["OpDot"] = Op.OpDot;
            _opCodes["OpIAddCarry"] = Op.OpIAddCarry;
            _opCodes["OpISubBorrow"] = Op.OpISubBorrow;
            _opCodes["OpUMulExtended"] = Op.OpUMulExtended;
            _opCodes["OpSMulExtended"] = Op.OpSMulExtended;
            _opCodes["OpAny"] = Op.OpAny;
            _opCodes["OpAll"] = Op.OpAll;
            _opCodes["OpIsNan"] = Op.OpIsNan;
            _opCodes["OpIsInf"] = Op.OpIsInf;
            _opCodes["OpIsFinite"] = Op.OpIsFinite;
            _opCodes["OpIsNormal"] = Op.OpIsNormal;
            _opCodes["OpSignBitSet"] = Op.OpSignBitSet;
            _opCodes["OpLessOrGreater"] = Op.OpLessOrGreater;
            _opCodes["OpOrdered"] = Op.OpOrdered;
            _opCodes["OpUnordered"] = Op.OpUnordered;
            _opCodes["OpLogicalEqual"] = Op.OpLogicalEqual;
            _opCodes["OpLogicalNotEqual"] = Op.OpLogicalNotEqual;
            _opCodes["OpLogicalOr"] = Op.OpLogicalOr;
            _opCodes["OpLogicalAnd"] = Op.OpLogicalAnd;
            _opCodes["OpLogicalNot"] = Op.OpLogicalNot;
            _opCodes["OpSelect"] = Op.OpSelect;
            _opCodes["OpIEqual"] = Op.OpIEqual;
            _opCodes["OpINotEqual"] = Op.OpINotEqual;
            _opCodes["OpUGreaterThan"] = Op.OpUGreaterThan;
            _opCodes["OpSGreaterThan"] = Op.OpSGreaterThan;
            _opCodes["OpUGreaterThanEqual"] = Op.OpUGreaterThanEqual;
            _opCodes["OpSGreaterThanEqual"] = Op.OpSGreaterThanEqual;
            _opCodes["OpULessThan"] = Op.OpULessThan;
            _opCodes["OpSLessThan"] = Op.OpSLessThan;
            _opCodes["OpULessThanEqual"] = Op.OpULessThanEqual;
            _opCodes["OpSLessThanEqual"] = Op.OpSLessThanEqual;
            _opCodes["OpFOrdEqual"] = Op.OpFOrdEqual;
            _opCodes["OpFUnordEqual"] = Op.OpFUnordEqual;
            _opCodes["OpFOrdNotEqual"] = Op.OpFOrdNotEqual;
            _opCodes["OpFUnordNotEqual"] = Op.OpFUnordNotEqual;
            _opCodes["OpFOrdLessThan"] = Op.OpFOrdLessThan;
            _opCodes["OpFUnordLessThan"] = Op.OpFUnordLessThan;
            _opCodes["OpFOrdGreaterThan"] = Op.OpFOrdGreaterThan;
            _opCodes["OpFUnordGreaterThan"] = Op.OpFUnordGreaterThan;
            _opCodes["OpFOrdLessThanEqual"] = Op.OpFOrdLessThanEqual;
            _opCodes["OpFUnordLessThanEqual"] = Op.OpFUnordLessThanEqual;
            _opCodes["OpFOrdGreaterThanEqual"] = Op.OpFOrdGreaterThanEqual;
            _opCodes["OpFUnordGreaterThanEqual"] = Op.OpFUnordGreaterThanEqual;
            _opCodes["OpShiftRightLogical"] = Op.OpShiftRightLogical;
            _opCodes["OpShiftRightArithmetic"] = Op.OpShiftRightArithmetic;
            _opCodes["OpShiftLeftLogical"] = Op.OpShiftLeftLogical;
            _opCodes["OpBitwiseOr"] = Op.OpBitwiseOr;
            _opCodes["OpBitwiseXor"] = Op.OpBitwiseXor;
            _opCodes["OpBitwiseAnd"] = Op.OpBitwiseAnd;
            _opCodes["OpNot"] = Op.OpNot;
            _opCodes["OpBitFieldInsert"] = Op.OpBitFieldInsert;
            _opCodes["OpBitFieldSExtract"] = Op.OpBitFieldSExtract;
            _opCodes["OpBitFieldUExtract"] = Op.OpBitFieldUExtract;
            _opCodes["OpBitReverse"] = Op.OpBitReverse;
            _opCodes["OpBitCount"] = Op.OpBitCount;
            _opCodes["OpDPdx"] = Op.OpDPdx;
            _opCodes["OpDPdy"] = Op.OpDPdy;
            _opCodes["OpFwidth"] = Op.OpFwidth;
            _opCodes["OpDPdxFine"] = Op.OpDPdxFine;
            _opCodes["OpDPdyFine"] = Op.OpDPdyFine;
            _opCodes["OpFwidthFine"] = Op.OpFwidthFine;
            _opCodes["OpDPdxCoarse"] = Op.OpDPdxCoarse;
            _opCodes["OpDPdyCoarse"] = Op.OpDPdyCoarse;
            _opCodes["OpFwidthCoarse"] = Op.OpFwidthCoarse;
            _opCodes["OpEmitVertex"] = Op.OpEmitVertex;
            _opCodes["OpEndPrimitive"] = Op.OpEndPrimitive;
            _opCodes["OpEmitStreamVertex"] = Op.OpEmitStreamVertex;
            _opCodes["OpEndStreamPrimitive"] = Op.OpEndStreamPrimitive;
            _opCodes["OpControlBarrier"] = Op.OpControlBarrier;
            _opCodes["OpMemoryBarrier"] = Op.OpMemoryBarrier;
            _opCodes["OpAtomicLoad"] = Op.OpAtomicLoad;
            _opCodes["OpAtomicStore"] = Op.OpAtomicStore;
            _opCodes["OpAtomicExchange"] = Op.OpAtomicExchange;
            _opCodes["OpAtomicCompareExchange"] = Op.OpAtomicCompareExchange;
            _opCodes["OpAtomicCompareExchangeWeak"] = Op.OpAtomicCompareExchangeWeak;
            _opCodes["OpAtomicIIncrement"] = Op.OpAtomicIIncrement;
            _opCodes["OpAtomicIDecrement"] = Op.OpAtomicIDecrement;
            _opCodes["OpAtomicIAdd"] = Op.OpAtomicIAdd;
            _opCodes["OpAtomicISub"] = Op.OpAtomicISub;
            _opCodes["OpAtomicSMin"] = Op.OpAtomicSMin;
            _opCodes["OpAtomicUMin"] = Op.OpAtomicUMin;
            _opCodes["OpAtomicSMax"] = Op.OpAtomicSMax;
            _opCodes["OpAtomicUMax"] = Op.OpAtomicUMax;
            _opCodes["OpAtomicAnd"] = Op.OpAtomicAnd;
            _opCodes["OpAtomicOr"] = Op.OpAtomicOr;
            _opCodes["OpAtomicXor"] = Op.OpAtomicXor;
            _opCodes["OpPhi"] = Op.OpPhi;
            _opCodes["OpLoopMerge"] = Op.OpLoopMerge;
            _opCodes["OpSelectionMerge"] = Op.OpSelectionMerge;
            _opCodes["OpLabel"] = Op.OpLabel;
            _opCodes["OpBranch"] = Op.OpBranch;
            _opCodes["OpBranchConditional"] = Op.OpBranchConditional;
            _opCodes["OpSwitch"] = Op.OpSwitch;
            _opCodes["OpKill"] = Op.OpKill;
            _opCodes["OpReturn"] = Op.OpReturn;
            _opCodes["OpReturnValue"] = Op.OpReturnValue;
            _opCodes["OpUnreachable"] = Op.OpUnreachable;
            _opCodes["OpLifetimeStart"] = Op.OpLifetimeStart;
            _opCodes["OpLifetimeStop"] = Op.OpLifetimeStop;
            _opCodes["OpGroupAsyncCopy"] = Op.OpGroupAsyncCopy;
            _opCodes["OpGroupWaitEvents"] = Op.OpGroupWaitEvents;
            _opCodes["OpGroupAll"] = Op.OpGroupAll;
            _opCodes["OpGroupAny"] = Op.OpGroupAny;
            _opCodes["OpGroupBroadcast"] = Op.OpGroupBroadcast;
            _opCodes["OpGroupIAdd"] = Op.OpGroupIAdd;
            _opCodes["OpGroupFAdd"] = Op.OpGroupFAdd;
            _opCodes["OpGroupFMin"] = Op.OpGroupFMin;
            _opCodes["OpGroupUMin"] = Op.OpGroupUMin;
            _opCodes["OpGroupSMin"] = Op.OpGroupSMin;
            _opCodes["OpGroupFMax"] = Op.OpGroupFMax;
            _opCodes["OpGroupUMax"] = Op.OpGroupUMax;
            _opCodes["OpGroupSMax"] = Op.OpGroupSMax;
            _opCodes["OpReadPipe"] = Op.OpReadPipe;
            _opCodes["OpWritePipe"] = Op.OpWritePipe;
            _opCodes["OpReservedReadPipe"] = Op.OpReservedReadPipe;
            _opCodes["OpReservedWritePipe"] = Op.OpReservedWritePipe;
            _opCodes["OpReserveReadPipePackets"] = Op.OpReserveReadPipePackets;
            _opCodes["OpReserveWritePipePackets"] = Op.OpReserveWritePipePackets;
            _opCodes["OpCommitReadPipe"] = Op.OpCommitReadPipe;
            _opCodes["OpCommitWritePipe"] = Op.OpCommitWritePipe;
            _opCodes["OpIsValidReserveId"] = Op.OpIsValidReserveId;
            _opCodes["OpGetNumPipePackets"] = Op.OpGetNumPipePackets;
            _opCodes["OpGetMaxPipePackets"] = Op.OpGetMaxPipePackets;
            _opCodes["OpGroupReserveReadPipePackets"] = Op.OpGroupReserveReadPipePackets;
            _opCodes["OpGroupReserveWritePipePackets"] = Op.OpGroupReserveWritePipePackets;
            _opCodes["OpGroupCommitReadPipe"] = Op.OpGroupCommitReadPipe;
            _opCodes["OpGroupCommitWritePipe"] = Op.OpGroupCommitWritePipe;
            _opCodes["OpEnqueueMarker"] = Op.OpEnqueueMarker;
            _opCodes["OpEnqueueKernel"] = Op.OpEnqueueKernel;
            _opCodes["OpGetKernelNDrangeSubGroupCount"] = Op.OpGetKernelNDrangeSubGroupCount;
            _opCodes["OpGetKernelNDrangeMaxSubGroupSize"] = Op.OpGetKernelNDrangeMaxSubGroupSize;
            _opCodes["OpGetKernelWorkGroupSize"] = Op.OpGetKernelWorkGroupSize;
            _opCodes["OpGetKernelPreferredWorkGroupSizeMultiple"] = Op.OpGetKernelPreferredWorkGroupSizeMultiple;
            _opCodes["OpRetainEvent"] = Op.OpRetainEvent;
            _opCodes["OpReleaseEvent"] = Op.OpReleaseEvent;
            _opCodes["OpCreateUserEvent"] = Op.OpCreateUserEvent;
            _opCodes["OpIsValidEvent"] = Op.OpIsValidEvent;
            _opCodes["OpSetUserEventStatus"] = Op.OpSetUserEventStatus;
            _opCodes["OpCaptureEventProfilingInfo"] = Op.OpCaptureEventProfilingInfo;
            _opCodes["OpGetDefaultQueue"] = Op.OpGetDefaultQueue;
            _opCodes["OpBuildNDRange"] = Op.OpBuildNDRange;
            _opCodes["OpImageSparseSampleImplicitLod"] = Op.OpImageSparseSampleImplicitLod;
            _opCodes["OpImageSparseSampleExplicitLod"] = Op.OpImageSparseSampleExplicitLod;
            _opCodes["OpImageSparseSampleDrefImplicitLod"] = Op.OpImageSparseSampleDrefImplicitLod;
            _opCodes["OpImageSparseSampleDrefExplicitLod"] = Op.OpImageSparseSampleDrefExplicitLod;
            _opCodes["OpImageSparseSampleProjImplicitLod"] = Op.OpImageSparseSampleProjImplicitLod;
            _opCodes["OpImageSparseSampleProjExplicitLod"] = Op.OpImageSparseSampleProjExplicitLod;
            _opCodes["OpImageSparseSampleProjDrefImplicitLod"] = Op.OpImageSparseSampleProjDrefImplicitLod;
            _opCodes["OpImageSparseSampleProjDrefExplicitLod"] = Op.OpImageSparseSampleProjDrefExplicitLod;
            _opCodes["OpImageSparseFetch"] = Op.OpImageSparseFetch;
            _opCodes["OpImageSparseGather"] = Op.OpImageSparseGather;
            _opCodes["OpImageSparseDrefGather"] = Op.OpImageSparseDrefGather;
            _opCodes["OpImageSparseTexelsResident"] = Op.OpImageSparseTexelsResident;
            _opCodes["OpNoLine"] = Op.OpNoLine;
            _opCodes["OpAtomicFlagTestAndSet"] = Op.OpAtomicFlagTestAndSet;
            _opCodes["OpAtomicFlagClear"] = Op.OpAtomicFlagClear;
            _opCodes["OpImageSparseRead"] = Op.OpImageSparseRead;
            _opCodes["OpDecorateId"] = Op.OpDecorateId;
            _opCodes["OpSubgroupBallotKHR"] = Op.OpSubgroupBallotKHR;
            _opCodes["OpSubgroupFirstInvocationKHR"] = Op.OpSubgroupFirstInvocationKHR;
            _opCodes["OpSubgroupAllKHR"] = Op.OpSubgroupAllKHR;
            _opCodes["OpSubgroupAnyKHR"] = Op.OpSubgroupAnyKHR;
            _opCodes["OpSubgroupAllEqualKHR"] = Op.OpSubgroupAllEqualKHR;
            _opCodes["OpSubgroupReadInvocationKHR"] = Op.OpSubgroupReadInvocationKHR;
            _opCodes["OpGroupIAddNonUniformAMD"] = Op.OpGroupIAddNonUniformAMD;
            _opCodes["OpGroupFAddNonUniformAMD"] = Op.OpGroupFAddNonUniformAMD;
            _opCodes["OpGroupFMinNonUniformAMD"] = Op.OpGroupFMinNonUniformAMD;
            _opCodes["OpGroupUMinNonUniformAMD"] = Op.OpGroupUMinNonUniformAMD;
            _opCodes["OpGroupSMinNonUniformAMD"] = Op.OpGroupSMinNonUniformAMD;
            _opCodes["OpGroupFMaxNonUniformAMD"] = Op.OpGroupFMaxNonUniformAMD;
            _opCodes["OpGroupUMaxNonUniformAMD"] = Op.OpGroupUMaxNonUniformAMD;
            _opCodes["OpGroupSMaxNonUniformAMD"] = Op.OpGroupSMaxNonUniformAMD;
            _opCodes["OpFragmentMaskFetchAMD"] = Op.OpFragmentMaskFetchAMD;
            _opCodes["OpFragmentFetchAMD"] = Op.OpFragmentFetchAMD;
            _opCodes["OpSubgroupShuffleINTEL"] = Op.OpSubgroupShuffleINTEL;
            _opCodes["OpSubgroupShuffleDownINTEL"] = Op.OpSubgroupShuffleDownINTEL;
            _opCodes["OpSubgroupShuffleUpINTEL"] = Op.OpSubgroupShuffleUpINTEL;
            _opCodes["OpSubgroupShuffleXorINTEL"] = Op.OpSubgroupShuffleXorINTEL;
            _opCodes["OpSubgroupBlockReadINTEL"] = Op.OpSubgroupBlockReadINTEL;
            _opCodes["OpSubgroupBlockWriteINTEL"] = Op.OpSubgroupBlockWriteINTEL;
            _opCodes["OpSubgroupImageBlockReadINTEL"] = Op.OpSubgroupImageBlockReadINTEL;
            _opCodes["OpSubgroupImageBlockWriteINTEL"] = Op.OpSubgroupImageBlockWriteINTEL;
            _opCodes["OpDecorateStringGOOGLE"] = Op.OpDecorateStringGOOGLE;
            _opCodes["OpMemberDecorateStringGOOGLE"] = Op.OpMemberDecorateStringGOOGLE;
            #endregion

        }

        public static Op ParseOpCode(string opcode)
        {
            if (_opCodes.TryGetValue(opcode, out var code))
                return code;
            return Op.OpUndef;
        }

        public static void DeserializeInstruction(Instruction instruction, ScriptNode node, Deserializer context)
        {
            _serializers[(int)instruction.OpCode].Deserialize(instruction, node, context);
        }

        public abstract void Deserialize(Instruction instruction, ScriptNode node, Deserializer context);
    }
}
