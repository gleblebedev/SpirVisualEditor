<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Collections.Generic;
using SpirVGraph.Instructions;

namespace SpirVGraph.Spv
{
    public class <#= Name #>
    {
<#
	foreach (var baseType in bases)
	{
#>
	    public <#= baseType.Type #> <#= baseType.Name #> { get; set; }
<#
	}
#>
	    public static <#= Name #> Parse(WordReader reader, uint wordCount)
        {
            var end = reader.Position + wordCount;
			var res = new <#= Name #>();
<#
	foreach (var baseType in bases)
	{
#>
			res.<#= baseType.Name #> = Spv.<#= baseType.Base #>.Parse(reader, end-reader.Position);
<#
	}
#>
			return res;
        }

        public static <#= Name #> ParseOptional(WordReader reader, uint wordCount)
        {
			if (wordCount == 0) return null;
            return Parse(reader, wordCount);
        }

		
        public static IList<<#= Name #>> ParseCollection(WordReader reader, uint wordCount)
        {
            var end = reader.Position + wordCount;
            var res = new PrintableList<<#= Name #>>();
            while (reader.Position < end)
            {
                res.Add(Parse(reader, end-reader.Position));
            }
            return res;
        }
	}
}