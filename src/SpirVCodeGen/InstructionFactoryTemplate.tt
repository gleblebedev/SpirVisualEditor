<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using SpirVGraph.Spv;

namespace SpirVGraph.Instructions
{
    public static class InstructionFactory
    {

	    public static Instruction Parse(WordReader reader)
        {
            var pos = reader.Position;
            var opCode = reader.ReadWord();
            var op = (Op)(opCode & 0x0FFFF);
            var wordCount = (opCode >> 16) & 0x0FFFF;
            var end = pos + wordCount;
            var instruction = Create(op);
            instruction.Parse(reader, wordCount);
            if (reader.Position != end)
            {
                throw new FormatException();
            }

            return instruction;
        }

        public static Instruction Create(Op op)
		{
			switch (op)
			{
<#
foreach (var i in Instructions)
{
#>
				case Op.<#=i.opname #>: return new <#=i.opname #>();
<#
}
#>
			}
			throw new NotImplementedException();
		}
    }
}