<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
var idResult = operands.FirstOrDefault(_=>_.kind == "IdResult");
var idResultType = operands.FirstOrDefault(_=>_.kind == "IdResultType");
#>
using Toe.Scripting;

namespace SpirVGraph.NodeFactories
{
    public class <#= opname #>NodeFactory : AbstractNodeFactory
    {
        public static readonly <#= opname #>NodeFactory Instance = new <#= opname #>NodeFactory();

        public <#= opname #>NodeFactory():base(new ScriptNode()
        {
            Name = "<#= opname.Substring(2) #>",
            Category = NodeCategory.Function,
            Type = "<#= opname #>",
            InputPins =
            {
<#
foreach (var op in operands)
{
	if (op.kind == "IdRef")
	{
		WriteLine("                new PinWithConnection(\""+Utils.GetOperandName(op)+"\",null),");
	}
}
#>
            },
            OutputPins =
            {
<#
if (idResult != null)
{
WriteLine("                new Pin(\"out\",null),");
}
#>
            }
        }, NodeFactoryVisibility.Visible)
        {
        }
    }
}